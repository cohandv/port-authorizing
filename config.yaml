# Configuration saved at 2025-10-15T18:23:43-03:00
# Updated user pepe (by pepe)

server:
    port: 8081
    max_connection_duration: 2h0m0s
    base_url: http://localhost:8080
auth:
    jwt_secret: your-secret-key-change-this-in-production
    token_expiry: 30m0s
    providers:
        - name: keycloak
          type: oidc
          enabled: true
          config:
            client_id: port-authorizing
            client_secret: your-client-secret-change-in-production
            issuer: http://localhost:8180/realms/portauth
            redirect_url: http://localhost:8080/api/auth/oidc/callback
            roles_claim: roles
            username_claim: preferred_username
    users:
        - username: admin
          password: admin123
          roles:
            - admin
        - username: developer
          password: dev123
          roles:
            - developer
        - username: pepe
          password: dasdasd
          roles:
            - admin
connections:
    - name: postgres-test
      type: postgres
      host: localhost
      port: 5432
      duration: 3m0s
      tags:
        - env:test
        - type:database
      metadata:
        database: testdb
        description: Test PostgreSQL database (Docker)
      backend_username: testuser
      backend_password: testpass
      backend_database: testdb
    - name: nginx-server
      type: http
      host: localhost
      port: 8888
      scheme: http
      duration: 1h0m0s
      tags:
        - env:test
        - type:web
      metadata:
        description: Test Nginx web server (Docker)
    - name: postgres-prod
      type: postgres
      host: prod-db.example.com
      port: 5432
      duration: 15m0s
      tags:
        - env:production
        - type:database
      metadata:
        description: Production PostgreSQL database
    - name: internal-api
      type: http
      host: api.internal.example.com
      port: 443
      scheme: https
      duration: 2h0m0s
      tags:
        - env:production
        - type:api
      metadata:
        description: Internal REST API
policies:
    - name: admin-all
      roles:
        - admin
      tags:
        - env:test
        - env:production
      tag_match: any
      whitelist:
        - .*
    - name: dev-test
      roles:
        - developer
      tags:
        - env:test
      tag_match: any
      whitelist:
        - ^SELECT.*
        - ^EXPLAIN.*
        - ^SET.*
        - ^SHOW.*
        - ^BEGIN.*
        - ^COMMIT.*
        - ^ROLLBACK.*
        - ^GET /.*
        - ^POST /api/.*
        - ^PUT /api/.*
        - ^PATCH /api2/.*
    - name: dev-prod-readonly
      roles:
        - developer
      tags:
        - env:production
      tag_match: any
      whitelist:
        - ^SELECT.*
        - ^EXPLAIN.*
        - ^SET.*
        - ^SHOW.*
        - ^BEGIN.*
        - ^COMMIT.*
        - ^ROLLBACK.*
        - ^GET .*
security:
    enable_llm_analysis: false
    llm_provider: openai
logging:
    audit_log_path: audit.log
    log_level: info
approval:
    enabled: true
    patterns:
        - pattern: ^DELETE /.*
          tags:
            - env:test
          tag_match: all
          timeout_seconds: 10
        - pattern: ^DELETE FROM.*
          tags:
            - env:test
          tag_match: all
          timeout_seconds: 10
        - pattern: ^DROP TABLE.*
          tags:
            - env:test
          tag_match: all
          timeout_seconds: 10
        - pattern: ^DROP DATABASE.*
          tags:
            - env:test
          tag_match: all
          timeout_seconds: 10
        - pattern: ^TRUNCATE.*
          tags:
            - env:test
          tag_match: all
          timeout_seconds: 10
        - pattern: ^UPDATE.*
          tags:
            - env:test
          tag_match: all
          timeout_seconds: 10
    webhook:
        url: http://localhost:9000/webhook
    slack:
        webhook_url: https://hooks.slack.com/services/
