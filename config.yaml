server:
  port: 8080
  max_connection_duration: 2h

auth:
  jwt_secret: "your-secret-key-change-this-in-production"
  token_expiry: 24h

  # Authentication providers
  providers:
    # Uncomment to enable Keycloak OIDC
    - name: keycloak
      type: oidc
      enabled: true
      config:
        issuer: "http://localhost:8180/realms/portauth"
        client_id: "port-authorizing"
        client_secret: "your-client-secret-change-in-production"
        redirect_url: "http://localhost:8080/api/auth/oidc/callback"
        roles_claim: "roles"
        username_claim: "preferred_username"

    # Uncomment to enable LDAP
    # - name: ldap
    #   type: ldap
    #   enabled: true
    #   config:
    #     url: "localhost:389"
    #     bind_dn: "cn=admin,dc=portauth,dc=local"
    #     bind_password: "adminpass"
    #     user_base_dn: "ou=users,dc=portauth,dc=local"
    #     user_filter: "(uid=%s)"
    #     group_base_dn: "ou=groups,dc=portauth,dc=local"
    #     group_filter: "(member=%s)"

  # Local users (legacy support)
  users:
    - username: admin
      password: admin123
      roles:
        - admin
    - username: developer
      password: dev123
      roles:
        - developer

connections:
  # PostgreSQL test database (Docker)
  - name: postgres-test
    type: postgres
    host: localhost
    port: 5432
    duration: 3m
    tags:
      - env:test
      - type:database
    backend_username: "testuser"
    backend_password: "testpass"
    backend_database: "testdb"
    metadata:
      description: "Test PostgreSQL database (Docker)"
      database: "testdb"

  # Nginx web server (Docker)
  - name: nginx-server
    type: http
    host: localhost
    port: 8888
    scheme: http
    duration: 1h
    tags:
      - env:test
      - type:web
    metadata:
      description: "Test Nginx web server (Docker)"

  # Production examples
  - name: postgres-prod
    type: postgres
    host: prod-db.example.com
    port: 5432
    duration: 15m
    tags:
      - env:production
      - type:database
    metadata:
      description: "Production PostgreSQL database"

  - name: internal-api
    type: http
    host: api.internal.example.com
    port: 443
    scheme: https
    duration: 2h
    tags:
      - env:production
      - type:api
    metadata:
      description: "Internal REST API"

  - name: redis-cache
    type: tcp
    host: redis.example.com
    port: 6379
    duration: 5m
    tags:
      - env:production
      - type:cache
    metadata:
      description: "Redis cache server"

# Role-based access policies
policies:
  # Admin has full access to everything
  - name: admin-all
    roles:
      - admin
    tags:
      - env:test
      - env:production
    tag_match: any
    whitelist:
      - ".*"

  # Developer has full access to test
  - name: dev-test
    roles:
      - developer
    tags:
      - env:test
    tag_match: any
    whitelist:
      - "^SELECT.*"
      - "^EXPLAIN.*"

  # Developer has read-only access to production
  - name: dev-prod-readonly
    roles:
      - developer
    tags:
      - env:production
    tag_match: any
    whitelist:
      - "^SELECT.*"
      - "^GET .*"

security:
  enable_llm_analysis: false
  llm_provider: "openai"
  llm_api_key: ""

logging:
  audit_log_path: "audit.log"
  log_level: "info"

