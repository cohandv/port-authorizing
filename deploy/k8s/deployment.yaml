apiVersion: apps/v1
kind: Deployment
metadata:
  name: port-authorizing
  namespace: port-authorizing
  labels:
    app: port-authorizing
spec:
  replicas: 1  # Single instance only (no multi-write support for now)
  selector:
    matchLabels:
      app: port-authorizing
  template:
    metadata:
      labels:
        app: port-authorizing
    spec:
      serviceAccountName: port-authorizing
      containers:
        - name: port-authorizing
          image: port-authorizing:latest  # Build with: docker build -t port-authorizing:latest .
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            # Tell the app to use Kubernetes storage backend
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config
              mountPath: /app/config.yaml
              subPath: config.yaml
              readOnly: true

          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30

          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10

          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"

          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config
          configMap:
            name: port-authorizing-config

