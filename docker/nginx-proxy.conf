user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # WebSocket support - increase timeouts for long-lived connections
    proxy_connect_timeout 7d;
    proxy_send_timeout 7d;
    proxy_read_timeout 7d;

    # Map for WebSocket upgrade header (must be defined before use)
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Upstream to port-authorizing API server
    upstream port_authorizing_api {
        server api:8080;  # Docker service name
        # For load balancing across multiple instances, add more servers:
        # server api-2:8080;
        # server api-3:8080;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # Increase buffer sizes for WebSocket frames
        client_body_buffer_size 128k;
        client_max_body_size 10m;

        proxy_buffering off;  # Disable buffering for WebSocket
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Health check endpoint (for nginx itself)
        location /health {
            access_log off;
            return 200 "nginx-proxy healthy\n";
            add_header Content-Type text/plain;
        }

        # Proxy all API requests to port-authorizing
        location / {
            # Pass to upstream
            proxy_pass http://port_authorizing_api;

            # WebSocket upgrade headers (CRITICAL for WebSocket to work!)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Forward original client information
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Disable buffering for streaming/WebSocket
            proxy_buffering off;
            proxy_request_buffering off;

            # Enable TCP keepalive
            proxy_socket_keepalive on;

            # Log WebSocket upgrades
            access_log /var/log/nginx/websocket.log main;
        }
    }
}

